// ==UserScript==
// @name         Nh1enTools Map Cleaner (Instant Run)
// @namespace    http://tampermonkey.net/
// @version      1.1
// @description  X√≥a video, nh·∫°c, r√°c + th√™m ch·ªØ Nh1enTools v√†o minimap (ch·∫°y ngay l·∫≠p t·ª©c)
// @author       B·∫°n
// @match        https://tranhdau.net/*
// @grant        none
// @run-at       document-end
// ==/UserScript==

(function() {
    'use strict';

    function runScript() {
        // X√≥a c√°c ph·∫ßn t·ª≠ r√°c ngay l·∫≠p t·ª©c
        document.querySelectorAll('.santaright, .snakerightbottom, .santa, .js-render-canvas').forEach(el => el.remove());

        // ·∫®n snowflakes n·∫øu c√≥
        let snowElement = document.querySelector(".snowflakes");
        if (snowElement) {
            snowElement.style.display = 'none';
        }

        // Th√™m ch·ªØ "Nh1enTools" v√†o minimap
        let miniMapWrapper = document.getElementById('mini-map-wrapper');
        if (miniMapWrapper && !miniMapWrapper.querySelector('.nh1entools-text')) {
            let textElement = document.createElement('span');
            textElement.textContent = 'Nh1enTools';
            textElement.className = 'nh1entools-text';

            // Style ch·ªØ
            textElement.style.position = 'absolute';
            textElement.style.top = '50%';
            textElement.style.left = '50%';
            textElement.style.transform = 'translate(-50%, -50%)';
            textElement.style.color = 'Red';
            textElement.style.fontFamily = 'cursive, serif';
            textElement.style.fontSize = '20px';
            textElement.style.zIndex = '1100';

            miniMapWrapper.appendChild(textElement);

            // L√†m minimap trong su·ªët
            miniMapWrapper.style.background = 'transparent';
            miniMapWrapper.style.opacity = '0.5';
        }

        // Cho ph√©p ph√≠m b·∫•m ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng
        document.onkeydown = function(e) { };
    }

    // Ch·∫°y ngay khi DOM s·∫µn s√†ng
    if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", runScript);
    } else {
        runScript();
    }
})();

// ==UserScript==
// @name         SASUKE
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Fastest Mass Ejector & Split Macro
// @author       Tom Burris
// @match        *://*/*
// @grant        none
// @run-at       document-end
// ==/UserScript==
(function() {
    var local = {
        SCRIPT_CONFIG: {
            NAME_COLOR: "red", // the color, which the target name should be changed to
        },
        MENU_CONFIG: {

            /* https://htmlcolorcodes.com/color-picker/ */

            COLOR_1: "#20687C", // you can use color codes, rgba, hsl, rgb or just color names.
            COLOR_2:"#484430", // you can use color codes, rgba, hsl, rgb or just color names.
            RAINBOW: false, // replace false with true if you want the menu to be rainbow.
        },

        // DO NOT CHANGE ANYTHING BELOW HERE UNLESS YOU KNOW WHAT YOU'RE DOING \\

        COLOR_HUE: 0,
        COLOR_HUE2: 300,
        GAME_WS: null,
        GAME_INIT: false,
        PLAYER_PACKET_SPAWN: [],
        PLAYER_SOCKET: null,
        PLAYER_IS_DEAD: false,
        PLAYER_MOUSE: {
            x: null,
            y: null,
        },
        GAME_BYPASS: {
            mouseFrozen: Symbol(),
            utf8: new TextEncoder()
        }
    }

    function changeHue() {
        355 == local.COLOR_HUE && (local.COLOR_HUE = 0), local.COLOR_HUE++;
        355 == local.COLOR_HUE2 && (local.COLOR_HUE2 = 0), local.COLOR_HUE2++;
        $('.dialog-left').css({
            background: 'linear-gradient(to right bottom,hsl('+local.COLOR_HUE+', 50%, 50%),hsl('+local.COLOR_HUE2+', 50%, 50%)'
        })
    }
    function ready() {
        setInterval(() => {
            if(local.MENU_CONFIG.RAINBOW) {
                changeHue()
            } else {
                $('dialog-left').css({
                    background: `linear-gradient(to right bottom,${local.MENU_CONFIG.COLOR_1},${local.MENU_CONFIG.COLOR_2})`
                })
            }
        }, 10)
    }
    const { fillText } = CanvasRenderingContext2D.prototype;
    CanvasRenderingContext2D.prototype.fillText = function(text, x, y) {
        let config = local.SCRIPT_CONFIG
        if(text == document.getElementById("nick").value) {
            this.fillStyle = config.NAME_COLOR;
        }
        fillText.call(this, ...arguments);
    }
    document.addEventListener("DOMContentLoaded", ready)
})();
// ==UserScript==
// @name         SASUKE
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Fastest Mass Ejector & Split Macro
// @author       Tom Burris
// @match        *://*/*
// @grant        none
// @run-at       document-end
// ==/UserScript==

(function() {
    'use strict';

    function adjustUI() {
        // ·∫®n √¥ nh·∫≠p GIF CODE
        const gifInput = document.querySelector('input[placeholder="Nh·∫≠p GIF CODE"]');
        if (gifInput && gifInput.parentElement) {
            gifInput.parentElement.style.display = 'none';
        }

        // ·∫®n JACKPOT
        const jackpotDivs = Array.from(document.querySelectorAll('div')).filter(div =>
            div.innerText?.includes('JACKPOT') || div.innerText?.includes('QUAY')
        );
        jackpotDivs.forEach(div => {
            div.style.display = 'none';
        });

        // L√†m n√∫t Play TO ra
        const playButton = Array.from(document.querySelectorAll('button, div')).find(el =>
            el.innerText?.trim() === 'Play'
        );
        if (playButton) {
            playButton.style.fontSize = '32px';
            playButton.style.padding = '20px 40px';
            playButton.style.width = '500px';
            playButton.style.height = '80px';
            playButton.style.borderRadius = '12px';
            playButton.style.backgroundColor = '#00ccff';
            playButton.style.color = 'green';
            playButton.style.fontWeight = 'bold';
            playButton.style.boxShadow = '0 0 15px #00ffff';
            playButton.style.transition = 'transform 0.0s ease-in-out';
        }
    }

    const interval = setInterval(adjustUI, 200);
    setTimeout(() => clearInterval(interval), 5000);

})();
// ==UserScript==
// @name         SASUKE
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Fastest Mass Ejector & Split Macro
// @author       Tom Burris
// @match        *://*/*
// @grant        none
// @run-at       document-end
// ==/UserScript==

(function () {
    'use strict';

    const fpsDiv = document.createElement('div');
    fpsDiv.style.position = 'fixed';
    fpsDiv.style.top = '10px';
    fpsDiv.style.right = '10px'; // üëà Ch·ªânh sang ph·∫£i
    fpsDiv.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
    fpsDiv.style.color = '#00ff00';
    fpsDiv.style.fontFamily = 'monospace';
    fpsDiv.style.padding = '5px 10px';
    fpsDiv.style.zIndex = '9999';
    fpsDiv.style.borderRadius = '6px';
    fpsDiv.style.fontSize = '14px';
    fpsDiv.textContent = 'FPS: ...';

    document.body.appendChild(fpsDiv);

    let lastFrameTime = performance.now();
    let frameCount = 0;

    function updateFPS() {
        const now = performance.now();
        frameCount++;

        if (now - lastFrameTime >= 1000) {
            fpsDiv.textContent = `FPS: ${frameCount}`;
            frameCount = 0;
            lastFrameTime = now;
        }

        requestAnimationFrame(updateFPS);
    }

    requestAnimationFrame(updateFPS);
})();
// ==UserScript==
// @name         Ch·∫∑n Video + Nh·∫°c ngay l·∫≠p t·ª©c
// @namespace    http://tampermonkey.net/
// @version      1.1
// @description  X√≥a video intro v√† t·∫Øt nh·∫°c ngay khi load trang
// @match        *://tranhdau.net/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    // H√†m ch·∫∑n media
    function removeMedia() {
        document.querySelectorAll("video, audio").forEach(el => {
            el.pause?.();
            el.remove();
        });
    }

    // Ch·∫∑n ngay l·∫≠p t·ª©c
    removeMedia();

    // Quan s√°t DOM li√™n t·ª•c (ph√≤ng tr∆∞·ªùng h·ª£p game ch√®n l·∫°i video/nh·∫°c)
    const observer = new MutationObserver(removeMedia);
    observer.observe(document.body, { childList: true, subtree: true });
})();
// ==UserScript==
// @name         SASUKE
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Fastest Mass Ejector & Split Macro
// @author       Tom Burris
// @match        *://*/*
// @grant        none
// @run-at       document-end
// ==/UserScript==
(function() {
'use strict';

var New_WhiteBackgroundColor = '#001100';

var old_fillRect = CanvasRenderingContext2D.prototype.fillRect;
CanvasRenderingContext2D.prototype.fillRect = function() {
    var x = arguments[0];
    var y = arguments[1];
    var w = arguments[2];
    var h = arguments[3];

    if (x==0 && y==0 && w==this.canvas.width && h==this.canvas.height) {
        if (this.fillStyle == '#f2fbff') {
            this.fillStyle = New_WhiteBackgroundColor;
        }
    }

    return old_fillRect.apply(this, arguments);
};

function calculateRemain(text) {
    if (text.endsWith('s')) {
        var match;

        match = / in:? (\d+)s$/.exec(text);
        if (match !== null) {
            return parseInt(match[1], 10);
        }

        match = /^((\d+)m)? ?(\d+)s$/.exec(text);
        if (match !== null) {
            return (parseInt(match[2], 10) || 0) * 60 + parseInt(match[3], 10); // "x || 0" is "0 if x undefined"
        }
    }

    return null;
}

var old_fillText = CanvasRenderingContext2D.prototype.fillText;
CanvasRenderingContext2D.prototype.fillText = function() {
    if (arguments[0]=='Leaderboard')
        arguments[0] = '   PRCTOWN'
    return old_fillText.apply(this, arguments);
};
})();
// ==UserScript==
// @name         Agar Macro Nh1enTools
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Macro split, mass, auto feed, hide/show name b·∫±ng ph√≠m t·∫Øt
// @author       B·∫°n
// @match        https://tranhdau.net/*
// @grant        none
// @run-at       document-end
// ==/UserScript==

(function() {
    'use strict';

    let Feed = false;
    let Speed = 50; // t·ªëc ƒë·ªô feed, c√†ng nh·ªè c√†ng nhanh

    function split() {
        $("body").trigger($.Event("keydown", { keyCode: 32 }));
        $("body").trigger($.Event("keyup", { keyCode: 32 }));
    }

    function mass() {
        if (Feed) {
            window.onkeydown({ keyCode: 87 });
            window.onkeyup({ keyCode: 87 });
            setTimeout(mass, Speed);
        }
    }

    function keydown(event) {
        switch(event.keyCode) {
            case 81: // Q - Auto feed
                Feed = true;
                setTimeout(mass, Speed);
                break;

            case 83: // S - Center chu·ªôt
                let X = window.innerWidth / 2;
                let Y = window.innerHeight / 2;
                $("canvas").trigger($.Event("mousemove", { clientX: X, clientY: Y }));
                break;

            case 68: // D - Triplesplit
                split();
                setTimeout(split, Speed);
                setTimeout(split, Speed * 2);
                setTimeout(split, Speed * 3);
                break;

            case 65: // A - Doublesplit
                split();
                setTimeout(split, Speed);
                break;

            case 49: // Ph√≠m s·ªë 1 - Chat F5 nhanh
                let chatBox = $("#chat_textbox");
                if (!chatBox.is(":focus")) {
                    const message = "// ==User== // Macro Fast Mass Ejector & Split ‚úì";
                    chatBox.focus().val(message).trigger("input");

                    chatBox.trigger($.Event("keydown", { keyCode: 13 }));
                    chatBox.trigger($.Event("keyup", { keyCode: 13 }));
                }
                break;

            case 88: // X - Play
                let playButton = document.getElementById("play-btn");
                if (playButton) {
                    playButton.click();
                }
                break;

            case 67: // Ctrl + C - ·∫®n t√™n
                if (event.ctrlKey) {
                    $(".save[data-box-id='2']").prop("checked", false).trigger("change");
                    event.preventDefault();
                }
                break;

            case 86: // Ctrl + V - Hi·ªán t√™n
                if (event.ctrlKey) {
                    $(".save[data-box-id='2']").prop("checked", true).trigger("change");
                    event.preventDefault();
                }
                break;

            default:
                break;
        }
    }

    function keyup(event) {
        if (event.keyCode === 81) { // Nh·∫£ ph√≠m Q th√¨ d·ª´ng feed
            Feed = false;
        }
    }

    // Mouse right click ƒë·ªÉ feed
    $(function() {
        $("#canvas").mousedown(function(event) {
            if (event.which === 3) {
                Feed = true;
                setTimeout(mass, Speed);
            }
        });

        $("#canvas").mouseup(function(event) {
            if (event.which === 3) {
                Feed = false;
            }
        });

        $("#canvas").contextmenu(function(e) {
            e.preventDefault();
        });
    });

    // G·∫Øn s·ª± ki·ªán to√†n c·ª•c
    window.addEventListener("keydown", keydown, false);
    window.addEventListener("keyup", keyup, false);

})();





