// ==UserScript==
// @name         Custom Minimap Background
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Thay nền minimap và ẩn màu đen mặc định
// @author       Bạn
// @match        *://*/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    const css = `
        /* Chọn minimap (A1, A2…D4) và thay nền */
        #mini-map, .mini-map, .minimap {
            background: url("https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExc2c0NzJwdThxY2dwbGFwcjNzbnAya3dob3d3ZXEwNmJ3Y3IwZmczbSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/yCDoXaZyBVilq/giphy.gif")
                no-repeat center center !important;
            background-size: cover !important;
        }

        /* Ẩn màu đen mặc định */
        #mini-map canvas, .mini-map canvas, .minimap canvas {
            background: transparent !important;
        }
    `;

    // Tạo thẻ style và gắn vào head
    const style = document.createElement('style');
    style.textContent = css;
    document.head.appendChild(style);
})();
// ==UserScript==
// @name         SASUKE
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Fastest Mass Ejector & Split Macro
// @author       Tom Burris
// @match        *://*/*
// @grant        none
// @run-at       document-end
// ==/UserScript==
(function() {
    var local = {
        SCRIPT_CONFIG: {
            NAME_COLOR: "red", // the color, which the target name should be changed to
        },
        MENU_CONFIG: {

            /* https://htmlcolorcodes.com/color-picker/ */

            COLOR_1: "#20687C", // you can use color codes, rgba, hsl, rgb or just color names.
            COLOR_2:"#484430", // you can use color codes, rgba, hsl, rgb or just color names.
            RAINBOW: false, // replace false with true if you want the menu to be rainbow.
        },

        // DO NOT CHANGE ANYTHING BELOW HERE UNLESS YOU KNOW WHAT YOU'RE DOING \\

        COLOR_HUE: 0,
        COLOR_HUE2: 300,
        GAME_WS: null,
        GAME_INIT: false,
        PLAYER_PACKET_SPAWN: [],
        PLAYER_SOCKET: null,
        PLAYER_IS_DEAD: false,
        PLAYER_MOUSE: {
            x: null,
            y: null,
        },
        GAME_BYPASS: {
            mouseFrozen: Symbol(),
            utf8: new TextEncoder()
        }
    }

    function changeHue() {
        355 == local.COLOR_HUE && (local.COLOR_HUE = 0), local.COLOR_HUE++;
        355 == local.COLOR_HUE2 && (local.COLOR_HUE2 = 0), local.COLOR_HUE2++;
        $('.dialog-left').css({
            background: 'linear-gradient(to right bottom,hsl('+local.COLOR_HUE+', 50%, 50%),hsl('+local.COLOR_HUE2+', 50%, 50%)'
        })
    }
    function ready() {
        setInterval(() => {
            if(local.MENU_CONFIG.RAINBOW) {
                changeHue()
            } else {
                $('dialog-left').css({
                    background: `linear-gradient(to right bottom,${local.MENU_CONFIG.COLOR_1},${local.MENU_CONFIG.COLOR_2})`
                })
            }
        }, 10)
    }
    const { fillText } = CanvasRenderingContext2D.prototype;
    CanvasRenderingContext2D.prototype.fillText = function(text, x, y) {
        let config = local.SCRIPT_CONFIG
        if(text == document.getElementById("nick").value) {
            this.fillStyle = config.NAME_COLOR;
        }
        fillText.call(this, ...arguments);
    }
    document.addEventListener("DOMContentLoaded", ready)
})();
// ==UserScript==
// @name         SASUKE
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Fastest Mass Ejector & Split Macro
// @author       Tom Burris
// @match        *://*/*
// @grant        none
// @run-at       document-end
// ==/UserScript==

(function() {
    'use strict';

    function adjustUI() {
        // Ẩn ô nhập GIF CODE
        const gifInput = document.querySelector('input[placeholder="Nhập GIF CODE"]');
        if (gifInput && gifInput.parentElement) {
            gifInput.parentElement.style.display = 'none';
        }

        // Ẩn JACKPOT
        const jackpotDivs = Array.from(document.querySelectorAll('div')).filter(div =>
            div.innerText?.includes('JACKPOT') || div.innerText?.includes('QUAY')
        );
        jackpotDivs.forEach(div => {
            div.style.display = 'none';
        });

        // Làm nút Play TO ra
        const playButton = Array.from(document.querySelectorAll('button, div')).find(el =>
            el.innerText?.trim() === 'Play'
        );
        if (playButton) {
            playButton.style.fontSize = '32px';
            playButton.style.padding = '20px 40px';
            playButton.style.width = '500px';
            playButton.style.height = '80px';
            playButton.style.borderRadius = '12px';
            playButton.style.backgroundColor = '#00ccff';
            playButton.style.color = 'green';
            playButton.style.fontWeight = 'bold';
            playButton.style.boxShadow = '0 0 15px #00ffff';
            playButton.style.transition = 'transform 0.0s ease-in-out';
        }
    }

    const interval = setInterval(adjustUI, 200);
    setTimeout(() => clearInterval(interval), 5000);

})();
// ==UserScript==
// @name         SASUKE
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Fastest Mass Ejector & Split Macro
// @author       Tom Burris
// @match        *://*/*
// @grant        none
// @run-at       document-end
// ==/UserScript==

(function () {
    'use strict';

    const fpsDiv = document.createElement('div');
    fpsDiv.style.position = 'fixed';
    fpsDiv.style.top = '10px';
    fpsDiv.style.right = '10px'; // 👈 Chỉnh sang phải
    fpsDiv.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
    fpsDiv.style.color = '#00ff00';
    fpsDiv.style.fontFamily = 'monospace';
    fpsDiv.style.padding = '5px 10px';
    fpsDiv.style.zIndex = '9999';
    fpsDiv.style.borderRadius = '6px';
    fpsDiv.style.fontSize = '14px';
    fpsDiv.textContent = 'FPS: ...';

    document.body.appendChild(fpsDiv);

    let lastFrameTime = performance.now();
    let frameCount = 0;

    function updateFPS() {
        const now = performance.now();
        frameCount++;

        if (now - lastFrameTime >= 1000) {
            fpsDiv.textContent = `FPS: ${frameCount}`;
            frameCount = 0;
            lastFrameTime = now;
        }

        requestAnimationFrame(updateFPS);
    }

    requestAnimationFrame(updateFPS);
})();
// ==UserScript==
// @name         SASUKE
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Fastest Mass Ejector & Split Macro
// @author       Tom Burris
// @match        *://*/*
// @grant        none
// @run-at       document-end
// ==/UserScript==
(function() {
'use strict';

var New_WhiteBackgroundColor = '#000';

var old_fillRect = CanvasRenderingContext2D.prototype.fillRect;
CanvasRenderingContext2D.prototype.fillRect = function() {
    var x = arguments[0];
    var y = arguments[1];
    var w = arguments[2];
    var h = arguments[3];

    if (x==0 && y==0 && w==this.canvas.width && h==this.canvas.height) {
        if (this.fillStyle == '#f2fbff') {
            this.fillStyle = New_WhiteBackgroundColor;
        }
    }

    return old_fillRect.apply(this, arguments);
};

function calculateRemain(text) {
    if (text.endsWith('s')) {
        var match;

        match = / in:? (\d+)s$/.exec(text);
        if (match !== null) {
            return parseInt(match[1], 10);
        }

        match = /^((\d+)m)? ?(\d+)s$/.exec(text);
        if (match !== null) {
            return (parseInt(match[2], 10) || 0) * 60 + parseInt(match[3], 10); // "x || 0" is "0 if x undefined"
        }
    }

    return null;
}

var old_fillText = CanvasRenderingContext2D.prototype.fillText;
CanvasRenderingContext2D.prototype.fillText = function() {
    if (arguments[0]=='Leaderboard')
        arguments[0] = '   PRCTOWN'
    return old_fillText.apply(this, arguments);
};
})();
